// simple Code for reading information from openweathermap.org 

  #include <ESP8266WiFi.h>
  #include <ArduinoJson.h>
  #include <Wire.h>
  #include <SPI.h>
 
  #include <NTPClient.h>
  #include <WiFiUdp.h>


  const char* ssid     = "K";                 // SSID of local network
  const char* password = "kingkise";                    // Password on network
  String APIKEY = "84b9927477cbd1cd3f3cd586238f0fca";                                 
  String CityID = "1275339";                                 //Your City ID


  WiFiClient client;
  char servername[]="api.openweathermap.org";              // remote server we will connect to
  String result;

  int  counter = 100;                                      

  String weatherDescription ="";
  String weatherLocation = "";
  String Country;
  float Temperature;
  float Humidity;
  float Pressure;
  float Sunrise;
  float Sunset;
  float Speed;
  float Temp_min;
  float Temp_max;
  float Visibility;
  float Wind_angle;



  void setup()
  {
  Serial.begin(115200);
  int cursorPosition=0;
 


   
  Serial.println("Connecting");
  WiFi.begin(ssid, password);
  
             while (WiFi.status() != WL_CONNECTED) 
            {
            {
            delay(2000);
           
            }

             
  }
  
  
  Serial.println("Connected");
  delay(1000);
    }

    void loop()
    
    {
    if(counter == 100)                                 //Get new data every 10 minutes
    {
      counter = 0;
      delay(1000);
      getWeatherData();
      delay(1000);
    }else
    {
      counter++;
      displayWeather(weatherLocation,weatherDescription);
       delay(1000);
    }
    }

    void getWeatherData()                                //client function to send/receive GET request data.
   {
   if (client.connect(servername, 80))   
          {                                         //starts client connection, checks for connection
          client.println("GET /data/2.5/weather?id="+CityID+"&units=metric&APPID="+APIKEY);
          client.println("Host: api.openweathermap.org");
          client.println("User-Agent: ArduinoWiFi/1.1");
          client.println("Connection: close");
          client.println();
          } 
  else {
         Serial.println("connection failed");        //error message if no client connect
          Serial.println();
       }

  while(client.connected() && !client.available()) 
  delay(1);                                          //waits for data
  while (client.connected() || client.available())    
       {                                             //connected or data available
         char c = client.read();                     //gets byte from ethernet buffer
         result = result+c;
       }

  client.stop();                                      //stop client
  result.replace('[', ' ');
  result.replace(']', ' ');
  Serial.println(result);
  char jsonArray [result.length()+1];
  result.toCharArray(jsonArray,sizeof(jsonArray));
  jsonArray[result.length() + 1] = '\0';
  StaticJsonBuffer<1024> json_buf;
  JsonObject &root = json_buf.parseObject(jsonArray);

  if (!root.success())
  {
    Serial.println("parseObject() failed");
  }

  String location = root["name"];
  String country = root["sys"]["country"];
  float temperature = root["main"]["temp"];
  float humidity = root["main"]["humidity"];
  String weather = root["weather"]["main"];
  String description = root["weather"]["description"];
  float pressure = root["main"]["pressure"];
  float sunrise = root["sys"]["sunrise"];
  float sunset = root["sys"]["sunset"];
  float temp_min = root["main"]["temp_min"];
  float temp_max = root["main"]["temp_max"];
  float speed = root["wind"]["speed"];
  float visibility = root["visibility"];
  float wind_angle = root["wind"]["deg"];
  weatherDescription = description;
  weatherLocation = location;
  Country = country;
  Temperature = temperature;
  Humidity = humidity;
  Pressure = pressure;
  Sunrise = sunrise;
  Sunset = sunset;
  Speed = speed;
  Temp_min = temp_min;
  Temp_max = temp_max;
  Visibility = visibility;
  Wind_angle = wind_angle;
 }

  void displayWeather(String location,String description)
 {
  Serial.println(description);
  delay(1000);
 }

      
